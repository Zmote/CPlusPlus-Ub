#ifndef SRC_FIBONACCIITERATOR_BOOST_H_
#define SRC_FIBONACCIITERATOR_BOOST_H_

#include <boost/operators.hpp>

struct FibonacciIterator : boost::input_iterator_helper<FibonacciIterator,int> {
	explicit FibonacciIterator(value_type n = 0):n_value{n}{}
	value_type operator=(int n_value){
		return calculateFibonacci(n_value);
	}

	bool operator==(FibonacciIterator const & fit){
		return n_value == fit.n_value;
	}

	static value_type calculateFibonacci(value_type n){
		if(n <=0) return 0;
		if(n > 0 && n < 3) return 1;
		int result{0};
		int pre_old_result{1};
		int old_result{1};

		for(int i=0; i < n-2;i++){
			result = pre_old_result + old_result;
			pre_old_result = old_result;
			old_result = result;
		}
		return result;
	}

private:

	value_type n_value;
};



#endif /* SRC_FIBONACCIITERATOR_H_ */
